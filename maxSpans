/*
Sakar Michel
6/24/2019
https://techdevguide.withgoogle.com/paths/foundational/maxspan-problem-return-largest-span-array/#!
https://codingbat.com/prob/p189576


Consider the leftmost and righmost appearances of some value in an array. We'll say that the "span" is the number of elements between the two inclusive. A single value has a span of 1. Returns the largest span found in the given array. (Efficiency is not a priority.)


maxSpan([1, 2, 1, 1, 3]) → 4
maxSpan([1, 4, 2, 1, 4, 1, 4]) → 6
maxSpan([1, 4, 2, 1, 4, 4, 4]) → 6





*/


public int maxSpan(int[] nums) {
 
 

  if(nums.length == 1)
  
  {
    
    return 1;
  }
  else if (nums.length == 0)
  {
    
    return 0;
  }
  else 
  {
    
    int count = 0;
    for(int i= 1; i < nums.length; i++)
    {
      
      
      count += 1;
    }
    
    //reajusting count if the first element equals the last
    int firstElement = nums[0];
    int lastElement = nums[nums.length -1];
    if(firstElement == lastElement)
    {
       count +=1;
       return count;
      
      
    }
    else 
    {
      
      return count;
    }
    
    
  }
}
